{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nconst useFetch = url => {\n  _s();\n  const [data, setData] = useState([]);\n  const [error, setError] = useState(null); // Change: set error as null, not an array\n  const [loading, setLoading] = useState(false); // Change: set loading as boolean false\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true); // Start loading\n      try {\n        const res = await fetch(url);\n        if (!res.ok) {\n          setError('Failed to fetch');\n          alert('failed to fetch');\n        }\n        const result = await res.json();\n        setData(result.data);\n      } catch (err) {\n        setError(err.message); // Set error message if fetch fails\n        setLoading(false); // Stop loading on catch block\n      }\n    };\n\n    fetchData();\n  }, [url]);\n  return {\n    data,\n    error,\n    loading\n  };\n};\n_s(useFetch, \"6nhoqVvctpRRYiww7uwVz/g7/BM=\");\nexport default useFetch;","map":{"version":3,"names":["useState","useEffect","useFetch","url","data","setData","error","setError","loading","setLoading","fetchData","res","fetch","ok","alert","result","json","err","message"],"sources":["G:/tour-management/tour-management/frontend/src/hooks/useFetch.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nconst useFetch = (url) => {\r\n    const [data, setData] = useState([]);\r\n    const [error, setError] = useState(null);  // Change: set error as null, not an array\r\n    const [loading, setLoading] = useState(false);  // Change: set loading as boolean false\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            setLoading(true);  // Start loading\r\n            try {\r\n                const res = await fetch(url); \r\n                if (!res.ok) {\r\n                    setError('Failed to fetch');\r\n                   \r\n                   alert('failed to fetch')\r\n                }\r\n                const result = await res.json();\r\n                setData(result.data);\r\n               \r\n            } catch (err) {\r\n                setError(err.message);  // Set error message if fetch fails\r\n                setLoading(false);  // Stop loading on catch block\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, [url]);\r\n\r\n    return {\r\n        data,\r\n        error,\r\n        loading\r\n    };\r\n};\r\n\r\nexport default useFetch;\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,MAAMC,QAAQ,GAAIC,GAAG,IAAK;EAAA;EACtB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAE;EAC3C,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAE;;EAEhDC,SAAS,CAAC,MAAM;IACZ,MAAMS,SAAS,GAAG,YAAY;MAC1BD,UAAU,CAAC,IAAI,CAAC,CAAC,CAAE;MACnB,IAAI;QACA,MAAME,GAAG,GAAG,MAAMC,KAAK,CAACT,GAAG,CAAC;QAC5B,IAAI,CAACQ,GAAG,CAACE,EAAE,EAAE;UACTN,QAAQ,CAAC,iBAAiB,CAAC;UAE5BO,KAAK,CAAC,iBAAiB,CAAC;QAC3B;QACA,MAAMC,MAAM,GAAG,MAAMJ,GAAG,CAACK,IAAI,EAAE;QAC/BX,OAAO,CAACU,MAAM,CAACX,IAAI,CAAC;MAExB,CAAC,CAAC,OAAOa,GAAG,EAAE;QACVV,QAAQ,CAACU,GAAG,CAACC,OAAO,CAAC,CAAC,CAAE;QACxBT,UAAU,CAAC,KAAK,CAAC,CAAC,CAAE;MACxB;IACJ,CAAC;;IAEDC,SAAS,EAAE;EACf,CAAC,EAAE,CAACP,GAAG,CAAC,CAAC;EAET,OAAO;IACHC,IAAI;IACJE,KAAK;IACLE;EACJ,CAAC;AACL,CAAC;AAAC,GAhCIN,QAAQ;AAkCd,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}