{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nconst useFetch = url => {\n  _s();\n  const [data, setData] = useState(null); // Changed to null for better handling of undefined state\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      try {\n        const res = await fetch(url);\n        if (!res.ok) {\n          throw new Error('Failed to fetch'); // Throw error directly\n        }\n\n        const result = await res.json();\n        setData((result === null || result === void 0 ? void 0 : result.data) || result); // Ensure result.data exists or fallback to result\n        setLoading(false);\n      } catch (err) {\n        setError(err.message || 'An error occurred'); // Handle error with default message\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [url]);\n  return {\n    data,\n    error,\n    loading\n  };\n};\n_s(useFetch, \"YajsHLBAOG05MTyqtNzx6OPYUa4=\");\nexport default useFetch;","map":{"version":3,"names":["useState","useEffect","useFetch","url","data","setData","error","setError","loading","setLoading","fetchData","res","fetch","ok","Error","result","json","err","message"],"sources":["G:/tour-management/tour-management/frontend/src/hooks/useFetch.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nconst useFetch = (url) => {\r\n    const [data, setData] = useState(null);  // Changed to null for better handling of undefined state\r\n    const [error, setError] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            setLoading(true);\r\n            try {\r\n                const res = await fetch(url);\r\n                if (!res.ok) {\r\n                    throw new Error('Failed to fetch'); // Throw error directly\r\n                }\r\n                const result = await res.json();\r\n                setData(result?.data || result);  // Ensure result.data exists or fallback to result\r\n                setLoading(false);\r\n            } catch (err) {\r\n                setError(err.message || 'An error occurred'); // Handle error with default message\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, [url]);\r\n\r\n    return {\r\n        data,\r\n        error,\r\n        loading\r\n    };\r\n};\r\n\r\nexport default useFetch;\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,MAAMC,QAAQ,GAAIC,GAAG,IAAK;EAAA;EACtB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAE;EACzC,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAE7CC,SAAS,CAAC,MAAM;IACZ,MAAMS,SAAS,GAAG,YAAY;MAC1BD,UAAU,CAAC,IAAI,CAAC;MAChB,IAAI;QACA,MAAME,GAAG,GAAG,MAAMC,KAAK,CAACT,GAAG,CAAC;QAC5B,IAAI,CAACQ,GAAG,CAACE,EAAE,EAAE;UACT,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC,CAAC,CAAC;QACxC;;QACA,MAAMC,MAAM,GAAG,MAAMJ,GAAG,CAACK,IAAI,EAAE;QAC/BX,OAAO,CAAC,CAAAU,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEX,IAAI,KAAIW,MAAM,CAAC,CAAC,CAAE;QAClCN,UAAU,CAAC,KAAK,CAAC;MACrB,CAAC,CAAC,OAAOQ,GAAG,EAAE;QACVV,QAAQ,CAACU,GAAG,CAACC,OAAO,IAAI,mBAAmB,CAAC,CAAC,CAAC;QAC9CT,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ,CAAC;IAEDC,SAAS,EAAE;EACf,CAAC,EAAE,CAACP,GAAG,CAAC,CAAC;EAET,OAAO;IACHC,IAAI;IACJE,KAAK;IACLE;EACJ,CAAC;AACL,CAAC;AAAC,GA9BIN,QAAQ;AAgCd,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}