{"ast":null,"code":"var _jsxFileName = \"G:\\\\tour-management\\\\tour-management\\\\frontend\\\\src\\\\pages\\\\adminPanel.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminDashboard = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  // Fetch all users\n  const fetchUsers = async () => {\n    const response = await fetch('http://localhost:4000/api/v1/users');\n    const data = await response.json();\n    setUsers(data.data);\n    setLoading(false);\n  };\n\n  // Delete user\n  const handleDelete = async id => {\n    const response = await fetch(`http://localhost:4000/api/v1/${id}`, {\n      method: 'DELETE'\n    });\n    if (response.ok) {\n      fetchUsers();\n    } else {\n      console.error('Failed to delete user');\n    }\n  };\n\n  // Update user (can be expanded)\n  const handleUpdate = async (id, updatedData) => {\n    const response = await fetch(`http://localhost:4000/api/v1/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(updatedData)\n    });\n    if (response.ok) {\n      fetchUsers();\n    } else {\n      console.error('Failed to update user');\n    }\n  };\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [user.username, \" - \", user.email, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelete(user._id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleUpdate(user._id, {\n            username: 'UpdatedName'\n          }),\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)]\n      }, user._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminDashboard, \"+quVjBMM9THpHvnUcBaphXhhZmo=\");\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","AdminDashboard","users","setUsers","loading","setLoading","fetchUsers","response","fetch","data","json","handleDelete","id","method","ok","console","error","handleUpdate","updatedData","headers","body","JSON","stringify","map","user","username","email","_id"],"sources":["G:/tour-management/tour-management/frontend/src/pages/adminPanel.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst AdminDashboard = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Fetch all users\r\n  const fetchUsers = async () => {\r\n    const response = await fetch('http://localhost:4000/api/v1/users');\r\n    const data = await response.json();\r\n    setUsers(data.data);\r\n    setLoading(false);\r\n  };\r\n\r\n  // Delete user\r\n  const handleDelete = async (id) => {\r\n    const response = await fetch(`http://localhost:4000/api/v1/${id}`, {\r\n      method: 'DELETE',\r\n    });\r\n\r\n    if (response.ok) {\r\n      fetchUsers();\r\n    } else {\r\n      console.error('Failed to delete user');\r\n    }\r\n  };\r\n\r\n  // Update user (can be expanded)\r\n  const handleUpdate = async (id, updatedData) => {\r\n    const response = await fetch(`http://localhost:4000/api/v1/${id}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(updatedData),\r\n    });\r\n\r\n    if (response.ok) {\r\n      fetchUsers();\r\n    } else {\r\n      console.error('Failed to update user');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n\r\n  return (\r\n    <div>\r\n      <h1>Admin Dashboard</h1>\r\n      <h2>User List</h2>\r\n      <ul>\r\n        {users.map((user) => (\r\n          <li key={user._id}>\r\n            {user.username} - {user.email}\r\n            <button onClick={() => handleDelete(user._id)}>Delete</button>\r\n            <button onClick={() => handleUpdate(user._id, { username: 'UpdatedName' })}>Update</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC;AAEnD,MAAMC,cAAc,GAAG,MAAM;EAAA;EAC3B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACK,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACA,MAAMO,UAAU,GAAG,YAAY;IAC7B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,CAAC;IAClE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;IAClCP,QAAQ,CAACM,IAAI,CAACA,IAAI,CAAC;IACnBJ,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;;EAED;EACA,MAAMM,YAAY,GAAG,MAAOC,EAAE,IAAK;IACjC,MAAML,QAAQ,GAAG,MAAMC,KAAK,CAAE,gCAA+BI,EAAG,EAAC,EAAE;MACjEC,MAAM,EAAE;IACV,CAAC,CAAC;IAEF,IAAIN,QAAQ,CAACO,EAAE,EAAE;MACfR,UAAU,EAAE;IACd,CAAC,MAAM;MACLS,OAAO,CAACC,KAAK,CAAC,uBAAuB,CAAC;IACxC;EACF,CAAC;;EAED;EACA,MAAMC,YAAY,GAAG,OAAOL,EAAE,EAAEM,WAAW,KAAK;IAC9C,MAAMX,QAAQ,GAAG,MAAMC,KAAK,CAAE,gCAA+BI,EAAG,EAAC,EAAE;MACjEC,MAAM,EAAE,KAAK;MACbM,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACJ,WAAW;IAClC,CAAC,CAAC;IAEF,IAAIX,QAAQ,CAACO,EAAE,EAAE;MACfR,UAAU,EAAE;IACd,CAAC,MAAM;MACLS,OAAO,CAACC,KAAK,CAAC,uBAAuB,CAAC;IACxC;EACF,CAAC;EAEDhB,SAAS,CAAC,MAAM;IACdM,UAAU,EAAE;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIF,OAAO,EAAE,oBAAO;IAAA,UAAK;EAAU;IAAA;IAAA;IAAA;EAAA,QAAM;EAEzC,oBACE;IAAA,wBACE;MAAA,UAAI;IAAe;MAAA;MAAA;MAAA;IAAA,QAAK,eACxB;MAAA,UAAI;IAAS;MAAA;MAAA;MAAA;IAAA,QAAK,eAClB;MAAA,UACGF,KAAK,CAACqB,GAAG,CAAEC,IAAI,iBACd;QAAA,WACGA,IAAI,CAACC,QAAQ,EAAC,KAAG,EAACD,IAAI,CAACE,KAAK,eAC7B;UAAQ,OAAO,EAAE,MAAMf,YAAY,CAACa,IAAI,CAACG,GAAG,CAAE;UAAA,UAAC;QAAM;UAAA;UAAA;UAAA;QAAA,QAAS,eAC9D;UAAQ,OAAO,EAAE,MAAMV,YAAY,CAACO,IAAI,CAACG,GAAG,EAAE;YAAEF,QAAQ,EAAE;UAAc,CAAC,CAAE;UAAA,UAAC;QAAM;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA,GAHpFD,IAAI,CAACG,GAAG;QAAA;QAAA;QAAA;MAAA,QAKlB;IAAC;MAAA;MAAA;MAAA;IAAA,QACC;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAEV,CAAC;AAAC,GA/DI1B,cAAc;AAAA,KAAdA,cAAc;AAiEpB,eAAeA,cAAc;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}