{"ast":null,"code":"var _jsxFileName = \"G:\\\\tour-management\\\\tour-management\\\\frontend\\\\src\\\\pages\\\\adminPanel.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Button, Table } from 'reactstrap';\nimport '../styles/adminpanel.css'; // Assuming you add a separate CSS file for styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminDashboard = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  // Fetch all users\n  const fetchUsers = async () => {\n    const response = await fetch('http://localhost:4000/api/v1/users');\n    const data = await response.json();\n    setUsers(data.data);\n    setLoading(false);\n  };\n\n  // Delete user\n  const handleDelete = async id => {\n    const response = await fetch(`http://localhost:4000/api/v1/users/${id}`, {\n      method: 'DELETE'\n    });\n    if (response.ok) {\n      fetchUsers();\n    } else {\n      console.error('Failed to delete user');\n    }\n  };\n\n  // Update user (can be expanded)\n  const handleUpdate = async (id, updatedData) => {\n    const response = await fetch(`http://localhost:4000/api/v1/users/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(updatedData)\n    });\n    if (response.ok) {\n      fetchUsers();\n    } else {\n      console.error('Failed to update user');\n    }\n  };\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center my-4\",\n      children: \"Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center mb-4\",\n      children: \"Manage Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          striped: true,\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Username\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: users.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: user.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: user.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  color: \"danger\",\n                  onClick: () => handleDelete(user._id),\n                  className: \"mr-2\",\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  color: \"warning\",\n                  onClick: () => handleUpdate(user._id, {\n                    username: 'UpdatedName'\n                  }),\n                  children: \"Update\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 19\n              }, this)]\n            }, user._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminDashboard, \"+quVjBMM9THpHvnUcBaphXhhZmo=\");\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","Container","Row","Col","Button","Table","AdminDashboard","users","setUsers","loading","setLoading","fetchUsers","response","fetch","data","json","handleDelete","id","method","ok","console","error","handleUpdate","updatedData","headers","body","JSON","stringify","map","user","username","email","_id"],"sources":["G:/tour-management/tour-management/frontend/src/pages/adminPanel.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Container, Row, Col, Button, Table } from 'reactstrap';\r\nimport '../styles/adminpanel.css'; // Assuming you add a separate CSS file for styles\r\n\r\nconst AdminDashboard = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Fetch all users\r\n  const fetchUsers = async () => {\r\n    const response = await fetch('http://localhost:4000/api/v1/users');\r\n    const data = await response.json();\r\n    setUsers(data.data);\r\n    setLoading(false);\r\n  };\r\n\r\n  // Delete user\r\n  const handleDelete = async (id) => {\r\n    const response = await fetch(`http://localhost:4000/api/v1/users/${id}`, {\r\n      method: 'DELETE',\r\n    });\r\n\r\n    if (response.ok) {\r\n      fetchUsers();\r\n    } else {\r\n      console.error('Failed to delete user');\r\n    }\r\n  };\r\n\r\n  // Update user (can be expanded)\r\n  const handleUpdate = async (id, updatedData) => {\r\n    const response = await fetch(`http://localhost:4000/api/v1/users/${id}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(updatedData),\r\n    });\r\n\r\n    if (response.ok) {\r\n      fetchUsers();\r\n    } else {\r\n      console.error('Failed to update user');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n\r\n  return (\r\n    <Container>\r\n      <h1 className=\"text-center my-4\">Admin Dashboard</h1>\r\n      <h2 className=\"text-center mb-4\">Manage Users</h2>\r\n\r\n      <Row>\r\n        <Col>\r\n          <Table striped>\r\n            <thead>\r\n              <tr>\r\n                <th>Username</th>\r\n                <th>Email</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {users.map((user) => (\r\n                <tr key={user._id}>\r\n                  <td>{user.username}</td>\r\n                  <td>{user.email}</td>\r\n                  <td>\r\n                    <Button\r\n                      color=\"danger\"\r\n                      onClick={() => handleDelete(user._id)}\r\n                      className=\"mr-2\"\r\n                    >\r\n                      Delete\r\n                    </Button>\r\n                    <Button\r\n                      color=\"warning\"\r\n                      onClick={() =>\r\n                        handleUpdate(user._id, { username: 'UpdatedName' })\r\n                      }\r\n                    >\r\n                      Update\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,GAAG,EAAEC,GAAG,EAAEC,MAAM,EAAEC,KAAK,QAAQ,YAAY;AAC/D,OAAO,0BAA0B,CAAC,CAAC;AAAA;AAEnC,MAAMC,cAAc,GAAG,MAAM;EAAA;EAC3B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACA,MAAMY,UAAU,GAAG,YAAY;IAC7B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,CAAC;IAClE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;IAClCP,QAAQ,CAACM,IAAI,CAACA,IAAI,CAAC;IACnBJ,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;;EAED;EACA,MAAMM,YAAY,GAAG,MAAOC,EAAE,IAAK;IACjC,MAAML,QAAQ,GAAG,MAAMC,KAAK,CAAE,sCAAqCI,EAAG,EAAC,EAAE;MACvEC,MAAM,EAAE;IACV,CAAC,CAAC;IAEF,IAAIN,QAAQ,CAACO,EAAE,EAAE;MACfR,UAAU,EAAE;IACd,CAAC,MAAM;MACLS,OAAO,CAACC,KAAK,CAAC,uBAAuB,CAAC;IACxC;EACF,CAAC;;EAED;EACA,MAAMC,YAAY,GAAG,OAAOL,EAAE,EAAEM,WAAW,KAAK;IAC9C,MAAMX,QAAQ,GAAG,MAAMC,KAAK,CAAE,sCAAqCI,EAAG,EAAC,EAAE;MACvEC,MAAM,EAAE,KAAK;MACbM,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACJ,WAAW;IAClC,CAAC,CAAC;IAEF,IAAIX,QAAQ,CAACO,EAAE,EAAE;MACfR,UAAU,EAAE;IACd,CAAC,MAAM;MACLS,OAAO,CAACC,KAAK,CAAC,uBAAuB,CAAC;IACxC;EACF,CAAC;EAEDrB,SAAS,CAAC,MAAM;IACdW,UAAU,EAAE;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIF,OAAO,EAAE,oBAAO;IAAA,UAAK;EAAU;IAAA;IAAA;IAAA;EAAA,QAAM;EAEzC,oBACE,QAAC,SAAS;IAAA,wBACR;MAAI,SAAS,EAAC,kBAAkB;MAAA,UAAC;IAAe;MAAA;MAAA;MAAA;IAAA,QAAK,eACrD;MAAI,SAAS,EAAC,kBAAkB;MAAA,UAAC;IAAY;MAAA;MAAA;MAAA;IAAA,QAAK,eAElD,QAAC,GAAG;MAAA,uBACF,QAAC,GAAG;QAAA,uBACF,QAAC,KAAK;UAAC,OAAO;UAAA,wBACZ;YAAA,uBACE;cAAA,wBACE;gBAAA,UAAI;cAAQ;gBAAA;gBAAA;gBAAA;cAAA,QAAK,eACjB;gBAAA,UAAI;cAAK;gBAAA;gBAAA;gBAAA;cAAA,QAAK,eACd;gBAAA,UAAI;cAAO;gBAAA;gBAAA;gBAAA;cAAA,QAAK;YAAA;cAAA;cAAA;cAAA;YAAA;UACb;YAAA;YAAA;YAAA;UAAA,QACC,eACR;YAAA,UACGF,KAAK,CAACqB,GAAG,CAAEC,IAAI,iBACd;cAAA,wBACE;gBAAA,UAAKA,IAAI,CAACC;cAAQ;gBAAA;gBAAA;gBAAA;cAAA,QAAM,eACxB;gBAAA,UAAKD,IAAI,CAACE;cAAK;gBAAA;gBAAA;gBAAA;cAAA,QAAM,eACrB;gBAAA,wBACE,QAAC,MAAM;kBACL,KAAK,EAAC,QAAQ;kBACd,OAAO,EAAE,MAAMf,YAAY,CAACa,IAAI,CAACG,GAAG,CAAE;kBACtC,SAAS,EAAC,MAAM;kBAAA,UACjB;gBAED;kBAAA;kBAAA;kBAAA;gBAAA,QAAS,eACT,QAAC,MAAM;kBACL,KAAK,EAAC,SAAS;kBACf,OAAO,EAAE,MACPV,YAAY,CAACO,IAAI,CAACG,GAAG,EAAE;oBAAEF,QAAQ,EAAE;kBAAc,CAAC,CACnD;kBAAA,UACF;gBAED;kBAAA;kBAAA;kBAAA;gBAAA,QAAS;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QACN;YAAA,GAnBED,IAAI,CAACG,GAAG;cAAA;cAAA;cAAA;YAAA,QAqBlB;UAAC;YAAA;YAAA;YAAA;UAAA,QACI;QAAA;UAAA;UAAA;UAAA;QAAA;MACF;QAAA;QAAA;QAAA;MAAA;IACJ;MAAA;MAAA;MAAA;IAAA,QACF;EAAA;IAAA;IAAA;IAAA;EAAA,QACI;AAEhB,CAAC;AAAC,GA7FI1B,cAAc;AAAA,KAAdA,cAAc;AA+FpB,eAAeA,cAAc;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}